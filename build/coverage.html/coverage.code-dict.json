{"/home/travis/build/npmtest/node-npmtest-react-router-component/test.js":"/* istanbul instrument in package npmtest_react_router_component */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-router-component/lib.npmtest_react_router_component.js":"/* istanbul instrument in package npmtest_react_router_component */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_router_component = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_router_component = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-router-component/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-router-component && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_router_component */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_router_component\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_router_component.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_router_component.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_router_component.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_router_component.__dirname + '/lib.npmtest_react_router_component.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/index.js":"\"use strict\";\n\nvar Router                    = require('./lib/Router');\nvar Route                     = require('./lib/Route');\nvar Link                      = require('./lib/Link');\n\nvar RouterMixin               = require('./lib/RouterMixin');\nvar RouteRenderingMixin       = require('./lib/RouteRenderingMixin');\n\nvar NavigatableMixin          = require('./lib/NavigatableMixin');\n\nvar environment               = require('./lib/environment');\n\nvar CaptureClicks             = require('./lib/CaptureClicks');\n\nvar URLPattern                = require('url-pattern');\n\nvar exportsObject = {\n  Locations: Router.Locations,\n  Pages: Router.Pages,\n\n  Location: Route.Route,\n  Page: Route.Route,\n  NotFound: Route.NotFound,\n\n  Link: Link,\n\n  environment: environment,\n\n  RouterMixin: RouterMixin,\n  RouteRenderingMixin: RouteRenderingMixin,\n\n  NavigatableMixin: NavigatableMixin,\n  CaptureClicks: CaptureClicks\n};\n\nmodule.exports = exportsObject;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/Router.js":"\"use strict\";\n\nvar React                     = require('react');\nvar RouterMixin               = require('./RouterMixin');\nvar RouteRenderingMixin       = require('./RouteRenderingMixin');\nvar assign                    = Object.assign || require('object-assign');\nvar omit                      = require('object.omit');\n\n// These are keys to omit - useful for preventing 15.2.0 warning regarding unknown props on DOM els\nvar PROP_KEYS = ['component']\n  .concat(Object.keys(RouterMixin.propTypes))\n  .concat(Object.keys(RouteRenderingMixin.propTypes));\n\n/**\n * Create a new router class\n *\n * @param {String} name\n * @param {ReactComponent} component\n */\nfunction createRouter(name, component) {\n\n  return React.createClass({\n\n    mixins: [RouterMixin, RouteRenderingMixin],\n\n    displayName: name,\n\n    propTypes: {\n      component: React.PropTypes.oneOfType([\n        React.PropTypes.string,\n        React.PropTypes.element,\n        React.PropTypes.func\n      ])\n    },\n\n    getRoutes: function(props) {\n      return props.children;\n    },\n\n    getDefaultProps: function() {\n      return {\n        component: component\n      };\n    },\n\n    render: function() {\n      // Render the Route's handler.\n      var handler = this.renderRouteHandler();\n\n      if (!this.props.component) {\n        return handler;\n      } else {\n        // Pass all props except this component to the Router (containing div/body) and the children,\n        // which are swapped out by the route handler.\n        var props = assign({}, this.props);\n        props = omit(props, PROP_KEYS);\n        return React.createElement(this.props.component, props, handler);\n      }\n    }\n  });\n}\n\nmodule.exports = {\n  createRouter: createRouter,\n  Locations: createRouter('Locations', 'div'),\n  Pages: createRouter('Pages', 'body')\n};\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/RouterMixin.js":"\"use strict\";\n\nvar React         = require('react');\nvar invariant     = require('./util/invariant');\nvar assign        = Object.assign || require('object-assign');\nvar matchRoutes   = require('./matchRoutes');\nvar Environment   = require('./environment');\nvar shallowEqual  = require('is-equal-shallow');\n\nvar RouterMixin = {\n  mixins: [Environment.Mixin],\n\n  propTypes: {\n    // Added by matches\n    _: React.PropTypes.array,\n    _query: React.PropTypes.object,\n    hash: React.PropTypes.bool,\n    // User props\n    path: React.PropTypes.string,\n    contextual: React.PropTypes.bool,\n    onBeforeNavigation: React.PropTypes.func,\n    onNavigation: React.PropTypes.func,\n    urlPatternOptions: React.PropTypes.oneOfType([\n      React.PropTypes.arrayOf(React.PropTypes.string),\n      React.PropTypes.object\n    ])\n  },\n\n  childContextTypes: {\n    router: React.PropTypes.any\n  },\n\n  getChildContext: function() {\n    return {\n      router: this\n    };\n  },\n\n  contextTypes: {\n    router: React.PropTypes.any\n  },\n\n  getInitialState: function() {\n    return this.getRouterState(this.props);\n  },\n\n  componentWillReceiveProps: function(nextProps) {\n    if (!shallowEqual(nextProps, this.props)) {\n      var nextState = this.getRouterState(nextProps);\n      this.delegateSetRoutingState(nextState);\n    }\n  },\n\n  getRouterState: function(props) {\n    var path;\n    var prefix;\n\n    var parent = props.contextual && this.getParentRouter();\n\n    if (parent) {\n      // Build our new path based off the parent. A navigation may be in progress, in which case\n      // we as well want the newest data so we use the pending match.\n      var parentMatch = parent._pendingMatch || parent.getMatch();\n\n      invariant(\n        props.path ||\n        isString(parentMatch.unmatchedPath) ||\n        parentMatch.matchedPath === parentMatch.path,\n        \"contextual router has nothing to match on: %s\", parentMatch.unmatchedPath\n      );\n\n      path = props.path || parentMatch.unmatchedPath || '/';\n      prefix = parent.state.prefix + parentMatch.matchedPath;\n    } else {\n\n      path = props.path || this.getEnvironment().getPath();\n\n      invariant(\n        isString(path),\n        (\"router operate in environment which cannot provide path, \" +\n         \"pass it a path prop; or probably you want to make it contextual\")\n      );\n\n      prefix = '';\n    }\n\n    if (path[0] !== '/') {\n      path = '/' + path;\n    }\n\n    var match = matchRoutes(this.getRoutes(props), path, this.getURLPatternOptions());\n\n    return {\n      match: match,\n      matchProps: match.getProps(),\n      handler: match.getHandler(),\n      prefix: prefix,\n      navigation: {},\n      path: path\n    };\n  },\n\n  getEnvironment: function() {\n    if (this.props.environment) {\n      return this.props.environment;\n    }\n    if (this.props.hash) {\n      return Environment.hashEnvironment;\n    }\n    if (this.props.contextual && this.context.router) {\n      return this.context.router.getEnvironment();\n    }\n    return Environment.defaultEnvironment;\n  },\n\n  /**\n   * Return parent router or undefined.\n   */\n  getParentRouter: function() {\n    var current = this.context.router;\n    var environment = this.getEnvironment();\n\n    if (current) {\n      if (current.getEnvironment() === environment) {\n        return current;\n      }\n    }\n  },\n\n  /**\n   * Return current match.\n   */\n  getMatch: function() {\n    return this.state.match;\n  },\n\n  getURLPatternOptions: function() {\n    var parent = this.getParentRouter();\n    var parentOptions = parent && parent.getURLPatternOptions();\n    // Check existence so we don't return an empty object if there are no options.\n    if (parentOptions) {\n      return assign({}, this.props.urlPatternOptions, parentOptions);\n    }\n    return this.props.urlPatternOptions;\n  },\n\n  /**\n   * Make href scoped for the current router.\n   */\n  makeHref: function(href) {\n    return join(this.state.prefix, href);\n  },\n\n  /**\n   * Navigate to a path\n   *\n   * @param {String} path\n   * @param {Function} navigation\n   * @param {Callback} cb\n   */\n  navigate: function(path, navigation, cb) {\n    path = join(this.state.prefix, path);\n    this.getEnvironment().setPath(path, navigation, cb);\n  },\n\n  /**\n   * Set new path.\n   *\n   * This function is called by environment.\n   *\n   * @private\n   *\n   * @param {String} path\n   * @param {Function} navigation\n   * @param {Callback} cb\n   */\n  setPath: function(path, navigation, cb) {\n    var state = this.getRouterState(this.props);\n    state.navigation = navigation;\n\n    if (this.props.onBeforeNavigation &&\n        this.props.onBeforeNavigation(state.path, navigation, state.match) === false) {\n      return;\n    }\n\n    if (navigation.onBeforeNavigation &&\n        navigation.onBeforeNavigation(state.path, navigation, state.match) === false) {\n      return;\n    }\n\n    this.delegateSetRoutingState(state, function() {\n      if (this.props.onNavigation) {\n        this.props.onNavigation(state.path, navigation, state.match);\n      }\n      cb();\n    }.bind(this));\n  },\n\n  /**\n   * Return the current path\n   */\n  getPath: function () {\n    return this.state.match.path;\n  },\n\n  /**\n   * Try to delegate state update to a setRoutingState method (might be provided\n   * by router itself) or use replaceState.\n   */\n  delegateSetRoutingState: function(state, cb) {\n    // Store this here so it can be accessed by child contextual routers in onBeforeNavigation.\n    this._pendingMatch = state.match;\n\n    if (this.setRoutingState) {\n      this.setRoutingState(state, cb);\n    } else {\n      this.setState(state, cb);\n    }\n  }\n\n};\n\nfunction join(a, b) {\n  return (a + b).replace(/\\/\\//g, '/');\n}\n\nfunction isString(o) {\n  return Object.prototype.toString.call(o) === '[object String]';\n}\n\nmodule.exports = RouterMixin;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/util/invariant.js":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n\"use strict\";\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar __ENV__ = process.env.NODE_ENV; // env lookup is slow in Node\nvar invariant = function (condition, format, a, b, c, d, e, f) {\n  if (__ENV__ !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error('Invariant Violation: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/matchRoutes.js":"\"use strict\";\n\nvar URLPattern = require('url-pattern');\nvar invariant = require('./util/invariant');\nvar warning = require('./util/warning');\nvar React = require('react');\nvar assign = Object.assign || require('object-assign');\nvar omit = require('object.omit');\nvar qs = require('qs');\n\nvar patternCache = {};\n\n/**\n * Match routes against a path\n *\n * @param {Array.<Route>}  routes                  Available Routes.\n * @param {String}         path                    Path to match.\n * @param {[Object|Array]} routerURLPatternOptions URLPattern options from parent router (and its parent and so on).\n */\nfunction matchRoutes(routes, path, routerURLPatternOptions) {\n  var match, page, notFound, queryObj, urlPatternOptions;\n\n  if (!Array.isArray(routes)) {\n    routes = [routes];\n  }\n\n  path = path.split('?');\n  var pathToMatch = path[0];\n  var queryString = path[1];\n  if (queryString) {\n    queryObj = qs.parse(queryString);\n  }\n\n  for (var i = 0, len = routes.length; i < len; i++) {\n    var current = routes[i];\n    // Simply skip null or undefined to allow ternaries in route definitions\n    if (!current) continue;\n\n    invariant(\n      current.props.handler !== undefined && current.props.path !== undefined,\n      \"Router should contain either Route or NotFound components as routes\");\n\n    if (current.props.path) {\n      // Allow passing compiler options to url-pattern, see\n      // https://github.com/snd/url-pattern#customize-the-pattern-syntax\n      // Note that this blows up if you provide an empty object on a regex path\n      urlPatternOptions = null;\n      if (Array.isArray(current.props.urlPatternOptions) || current.props.path instanceof RegExp) {\n        // If an array is passed, it takes precedence - assumed these are regexp keys\n        urlPatternOptions = current.props.urlPatternOptions;\n      } else if (routerURLPatternOptions || current.props.urlPatternOptions) {\n        urlPatternOptions = assign({}, routerURLPatternOptions, current.props.urlPatternOptions);\n      }\n\n      // matchKeys is deprecated\n      // FIXME remove this block in next minor version\n      if(current.props.matchKeys) {\n        urlPatternOptions = current.props.matchKeys;\n        warning(false,\n          '`matchKeys` is deprecated; please use the prop `urlPatternOptions` instead. See the CHANGELOG for details.');\n      }\n\n      var cacheKey = current.props.path + (urlPatternOptions ? JSON.stringify(urlPatternOptions) : '');\n\n      var pattern = patternCache[cacheKey];\n      if (!pattern) {\n        pattern = patternCache[cacheKey] = new URLPattern(current.props.path, urlPatternOptions);\n      }\n\n      if (!page) {\n        match = pattern.match(pathToMatch);\n        if (match) {\n          page = current;\n        }\n\n        // Backcompat fix in 0.27: regexes in url-pattern no longer return {_: matches}\n        if (match && current.props.path instanceof RegExp && !match._ && Array.isArray(match)) {\n          match = {_: match};\n        }\n\n        // Backcompat fix; url-pattern removed the array wrapper on wildcards\n        if (match && match._ && !Array.isArray(match._)) {\n          match._ = [match._];\n        }\n\n      }\n    }\n    if (!notFound && current.props.path === null) {\n      notFound = current;\n    }\n  }\n\n  return new Match(\n    pathToMatch,\n    page ? page : notFound ? notFound : null,\n    match,\n    queryObj,\n    (urlPatternOptions || {}).namedSegmentValueDecoders\n  );\n}\n\n/**\n * Match object\n *\n * @private\n */\nfunction Match(path, route, match, query, valueDecoders) {\n  this.path = path;\n  this.route = route;\n  this.match = match;\n  this.query = query;\n\n  if (valueDecoders) {    \n    Object.keys(match || {}).forEach(function(key) {\n      if (typeof valueDecoders === 'function') {\n        match[key] = valueDecoders(key, match[key]);\n        return;\n      }\n      var fn = valueDecoders.hasOwnProperty(key) && valueDecoders[key];\n      if (typeof fn === 'function') {\n        match[key] = fn(match[key]);\n      }\n    });\n  }\n\n  this.unmatchedPath = this.match && this.match._ ?\n    this.match._[0] :\n    null;\n\n  this.matchedPath = this.unmatchedPath ?\n    this.path.substring(0, this.path.length - this.unmatchedPath.length) :\n    this.path;\n}\n\nvar EMPTY_OBJECT = {}; // Maintains reference equality, useful for SCU\nObject.freeze && Object.freeze(EMPTY_OBJECT);\nMatch.prototype.getProps = function() {\n  if (!this.route) {\n    throw new Error(\"React-router-component: No route matched! Did you define a NotFound route?\");\n  }\n  var props = assign({}, this.route.props, this.match);\n  // Querystring is assigned as _query.\n  props._query = this.query || EMPTY_OBJECT;\n\n  // Delete props that shouldn't be passed to the handler.\n  props = omit(props, ['pattern', 'path', 'handler']);\n\n  return props;\n}\n\nMatch.prototype.getHandler = function() {\n  if (!this.route) return undefined;\n\n  return this.route.props.handler;\n};\n\nmodule.exports = matchRoutes;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/util/warning.js":"/**\n * Copyright 2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule warning\n */\n\n\"use strict\";\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function(){};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  warning = function(condition, format ) {var args=Array.prototype.slice.call(arguments,2);\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      /*eslint no-console:0*/\n      console.warn('Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];}));\n    }\n  };\n}\n\nmodule.exports = warning;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/environment/index.js":"\"use strict\";\n/**\n * Routing environment.\n *\n * It specifies how routers read its state from DOM and synchronise it back.\n */\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nvar DummyEnvironment      = require('./DummyEnvironment');\nvar Environment           = require('./Environment');\n\n/**\n * Mixin for routes to keep attached to an environment.\n *\n * This mixin assumes the environment is passed via props.\n */\nvar Mixin = {\n\n  componentDidMount: function() {\n    this.getEnvironment().register(this);\n  },\n\n  componentWillUnmount: function() {\n    this.getEnvironment().unregister(this);\n  }\n};\n\nvar PathnameEnvironment;\nvar HashEnvironment;\n\nvar pathnameEnvironment;\nvar hashEnvironment;\nvar defaultEnvironment;\nvar dummyEnvironment;\n\nif (canUseDOM) {\n\n  PathnameEnvironment = require('./PathnameEnvironment');\n  HashEnvironment     = require('./HashEnvironment');\n\n  pathnameEnvironment = new PathnameEnvironment();\n  hashEnvironment     = new HashEnvironment();\n  defaultEnvironment  = (window.history !== undefined &&\n                         window.history.pushState !== undefined) ?\n                        pathnameEnvironment :\n                        hashEnvironment;\n\n} else {\n\n  dummyEnvironment    = new DummyEnvironment();\n  pathnameEnvironment = dummyEnvironment;\n  hashEnvironment     = dummyEnvironment;\n  defaultEnvironment  = dummyEnvironment;\n\n}\n\nmodule.exports = {\n  pathnameEnvironment: pathnameEnvironment,\n  hashEnvironment: hashEnvironment,\n  defaultEnvironment: defaultEnvironment,\n  dummyEnvironment: dummyEnvironment,\n\n  Environment: Environment,\n  PathnameEnvironment: PathnameEnvironment,\n  HashEnvironment: HashEnvironment,\n\n  Mixin: Mixin\n};\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/environment/DummyEnvironment.js":"\"use strict\";\n\nvar Environment   = require('./Environment');\nvar emptyFunction = function() {};\n\n/**\n * Dummy routing environment which provides no path.\n *\n * Should be used on server or in WebWorker.\n */\nfunction DummyEnvironment() {\n  Environment.call(this);\n}\n\nDummyEnvironment.prototype = Object.create(Environment.prototype);\nDummyEnvironment.prototype.constructor = DummyEnvironment;\n\nDummyEnvironment.prototype.getPath = function() { return null; };\n\nDummyEnvironment.prototype.setPath = function(path, navigation, cb) {\n  // Support old (path, cb) arity\n  if (typeof navigation === 'function' && cb === undefined) {\n    cb = navigation;\n    navigation = {};\n  }\n  this.path = path;\n  cb();\n};\n\nDummyEnvironment.prototype.start = emptyFunction;\n\nDummyEnvironment.prototype.stop = emptyFunction;\n\nmodule.exports = DummyEnvironment;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/environment/Environment.js":"\"use strict\";\n\n// batchedUpdates is now exposed in 0.12\nvar batchedUpdates = require(\"react-dom\").unstable_batchedUpdates || require('react').batchedUpdates;\n\n/**\n * Base abstract class for a routing environment.\n *\n * @private\n */\nfunction Environment() {\n  this.routers = [];\n  this.path = this.getPath();\n}\n\n/**\n * Notify routers about the change.\n *\n * @param {Object} navigation\n * @param {Function} cb\n */\nEnvironment.prototype.notify = function notify(navigation, cb) {\n  var latch = this.routers.length;\n\n  if (latch === 0) {\n    return cb && cb();\n  }\n\n  function callback() {\n    latch -= 1;\n    if (cb && latch === 0) {\n      cb();\n    }\n  }\n\n  batchedUpdates(function() {\n    for (var i = 0, len = this.routers.length; i < len; i++) {\n      this.routers[i].setPath(this.path, navigation, callback);\n    }\n  }.bind(this));\n};\n\nEnvironment.prototype.makeHref = function makeHref(path) {\n  return path;\n};\n\nEnvironment.prototype.navigate = function navigate(path, navigation, cb) {\n  return this.setPath(path, navigation, cb);\n};\n\nEnvironment.prototype.setPath = function(path, navigation, cb) {\n  // Support (path, cb) arity.\n  if (typeof navigation === 'function' && cb === undefined) {\n    cb = navigation;\n    navigation = {};\n  }\n  // Support (path) arity.\n  if (!navigation) navigation = {};\n\n  if (!navigation.isPopState) {\n    if (navigation.replace) {\n      this.replaceState(path, navigation);\n    } else {\n      this.pushState(path, navigation);\n    }\n  }\n  this.path = path;\n  this.notify(navigation, cb);\n};\n\n/**\n * Register router with an environment.\n */\nEnvironment.prototype.register = function register(router) {\n  if (this.routers.length === 0) {\n    this.start();\n  }\n\n  this.routers.push(router);\n};\n\n/**\n * Unregister router from an environment.\n */\nEnvironment.prototype.unregister = function unregister(router) {\n  if (this.routers.indexOf(router) > -1) {\n    this.routers.splice(this.routers.indexOf(router), 1);\n  }\n\n  if (this.routers.length === 0) {\n    this.stop();\n  }\n};\n\nmodule.exports = Environment;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/RouteRenderingMixin.js":"\"use strict\";\n\nvar React = require('react');\nvar assign = Object.assign || require('object-assign');\n\n\n/**\n * Mixin for routers which implements the simplest rendering strategy.\n */\nvar RouteRenderingMixin = {\n\n  propTypes: {\n    childProps: React.PropTypes.object\n  },\n\n  // Props passed at the `childProps` key are passed to all handlers.\n  getChildProps: function() {\n    var childProps = this.props.childProps || {};\n    // Merge up from parents, with inner props taking priority.\n    var parent = this.getParentRouter();\n    if (parent) {\n      childProps = assign({}, parent.getChildProps(), childProps);\n    }\n    return childProps;\n  },\n\n  renderRouteHandler: function() {\n    if (!this.state.match.route) {\n      throw new Error(\"React-router-component: No route matched! Did you define a NotFound route?\");\n    }\n    var handler = this.state.handler;\n    var isDOMElement = typeof handler.type === 'string';\n\n    // If this is a DOM element, don't send these props. This won't prevent all\n    // warnings in 15.2.0, but it will catch a lot of them.\n    var matchProps = isDOMElement ? null : this.state.matchProps;\n\n    var outProps = assign({ref: this.state.match.route.ref}, this.getChildProps(), matchProps);\n\n    // If we were passed an element, we need to clone it before passing it along.\n    if (React.isValidElement(handler)) {\n      // Be sure to keep the props that were already set on the handler.\n      // Otherwise, a handler like <div className=\"foo\">bar</div> would have its className lost.\n      return React.cloneElement(handler, assign(outProps, handler.props));\n    }\n    return React.createElement(handler, outProps);\n  }\n\n};\n\nmodule.exports = RouteRenderingMixin;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/Route.js":"\"use strict\";\n\nvar React = require('react');\n\nfunction createClass(name) {\n  return React.createClass({\n    displayName: name,\n    propTypes: {\n      handler: React.PropTypes.oneOfType([\n        // Can be ReactElement or ReactComponent, unfortunately there is no way to typecheck\n        // ReactComponent (that I know of)\n        React.PropTypes.element,\n        React.PropTypes.func\n      ]),\n      path: name === 'NotFound' ?\n        function(props, propName) {\n          if (props[propName]) throw new Error(\"Don't pass a `path` to NotFound.\");\n        }\n        : React.PropTypes.oneOfType([\n            React.PropTypes.string,\n            React.PropTypes.instanceOf(RegExp)\n          ]).isRequired,\n      urlPatternOptions: React.PropTypes.oneOfType([\n        React.PropTypes.arrayOf(React.PropTypes.string),\n        React.PropTypes.object\n      ])\n    },\n    getDefaultProps: function() {\n      if (name === 'NotFound') {\n        return {path: null};\n      }\n      return {};\n    },\n    render: function() {\n      throw new Error(name + \" is not meant to be directly rendered.\");\n    }\n  });\n}\n\nmodule.exports = {\n  /**\n   * Regular route descriptor.\n   *\n   * @param {Object} spec\n   */\n  Route: createClass('Route'),\n  /**\n   * Catch all route descriptor.\n   *\n   * @param {Object} spec\n   */\n  NotFound: createClass('NotFound')\n};\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/Link.js":"\"use strict\";\n\nvar React             = require('react');\nvar NavigatableMixin  = require('./NavigatableMixin');\nvar Environment       = require('./environment');\nvar assign            = Object.assign || require('object-assign');\nvar omit              = require('object.omit');\n\n/**\n * Link.\n *\n * A basic navigatable component which renders into <a> DOM element and handles\n * onClick event by transitioning onto different route (defined by\n * this.props.href).\n */\nvar Link = React.createClass({\n  mixins: [NavigatableMixin],\n\n  displayName: 'Link',\n\n  propTypes: {\n    href: React.PropTypes.string.isRequired,\n    global: React.PropTypes.bool,\n    globalHash: React.PropTypes.bool\n  },\n\n  onClick: function(e) {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    // return if the link target is external\n    if (this.props.href.match(/^([a-z-]+:|\\/\\/)/)) return;\n\n    // return if the user did a middle-click, right-click, or used a modifier\n    // key (like ctrl-click, meta-click, shift-click, etc.)\n    if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return;\n\n    if (!e.defaultPrevented) {\n      e.preventDefault();\n      this._navigate(this.props.href, function(err) {\n        if (err) {\n          throw err;\n        }\n      });\n    }\n  },\n\n  _navigationParams: function() {\n    var params = {};\n    for (var k in this.props) {\n      if (!this.constructor.propTypes[k]) {\n        params[k] = this.props[k];\n      }\n    }\n    return params;\n  },\n\n  _createHref: function() {\n    return this.props.global ?\n      Environment.defaultEnvironment.makeHref(this.props.href) :\n      this.makeHref(this.props.href);\n  },\n\n  _navigate: function(path, cb) {\n    if (this.props.globalHash) {\n      return Environment.hashEnvironment.navigate(path, cb);\n    }\n\n    if (this.props.global) {\n      return Environment.defaultEnvironment.navigate(path, cb);\n    }\n\n    return this.navigate(path, this._navigationParams(), cb);\n  },\n\n  render: function() {\n    var props = assign({}, this.props, {\n      onClick: this.onClick,\n      href: this._createHref()\n    });\n    props = omit(props, ['global', 'globalHash', '_query']);\n    return React.createElement('a', props, this.props.children);\n  }\n});\n\nmodule.exports = Link;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/NavigatableMixin.js":"\"use strict\";\n\nvar React       = require('react');\nvar Environment = require('./environment');\n\n\n/**\n * NavigatableMixin\n *\n * A mixin for a component which operates in context of a router and can\n * navigate to a different route using `navigate(path, navigation, cb)` method.\n */\nvar NavigatableMixin = {\n\n  contextTypes: {\n    router: React.PropTypes.any\n  },\n\n  /**\n   * @private\n   */\n  _getNavigable: function() {\n    return this.context.router || Environment.defaultEnvironment;\n  },\n\n  getPath: function() {\n    return this._getNavigable().getPath();\n  },\n\n  navigate: function(path, navigation, cb) {\n    return this._getNavigable().navigate(path, navigation, cb);\n  },\n\n  makeHref: function(path) {\n    return this._getNavigable().makeHref(path);\n  }\n};\n\nmodule.exports = NavigatableMixin;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/CaptureClicks.js":"\"use strict\";\n\nvar React       = require('react');\nvar urllite     = require('urllite/lib/core');\nvar Environment = require('./environment');\nvar HashEnvironment = require('./environment/HashEnvironment');\nvar assign      = Object.assign || require('object-assign');\nvar omit        = require('object.omit');\n\nvar PROP_TYPES = {\n  component: React.PropTypes.oneOfType([\n    React.PropTypes.string,\n    React.PropTypes.func\n  ]).isRequired,\n  environment: React.PropTypes.object,\n  gotoURL: React.PropTypes.func\n};\n\nvar PROP_KEYS = Object.keys(PROP_TYPES);\n\n/**\n * A container component which captures <a> clicks and, if there's a matching\n * route defined, routes them.\n */\nvar CaptureClicks = React.createClass({\n  displayName: 'CaptureClicks',\n\n  propTypes: PROP_TYPES,\n\n  getDefaultProps: function() {\n    return {\n      component: 'div',\n      environment: Environment.defaultEnvironment,\n      gotoURL: function(url) {\n        // We should really just be allowing the event's default action, be we\n        // can't make the decision to do that synchronously.\n        window.location.href = url;\n      }\n    };\n  },\n\n  onClick: function(e) {\n    if (this.props.onClick) {\n      var shouldProceed = this.props.onClick(e);\n      if (shouldProceed === false) return;\n    }\n\n    // Ignore canceled events, modified clicks, and right clicks.\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    if (e.metaKey || e.ctrlKey || e.shiftKey) {\n      return;\n    }\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    // Get the <a> element.\n    var el = e.target;\n    while (el && el.nodeName !== 'A') {\n      el = el.parentNode;\n    }\n\n    // Ignore clicks from non-a elements.\n    if (!el) {\n      return;\n    }\n\n    // Ignore the click if the element has a target.\n    if (el.target && el.target !== '_self') {\n      return;\n    }\n\n    // Ignore the click if it's a download link. (We use this method of\n    // detecting the presence of the attribute for old IE versions.)\n    if (el.attributes.download) {\n      return;\n    }\n\n    // Ignore hash (used often instead of javascript:void(0) in strict CSP envs)\n    if (el.getAttribute('href') === '#' && !(this.props.environment instanceof HashEnvironment)) {\n      return;\n    }\n\n    // Use a regular expression to parse URLs instead of relying on the browser\n    // to do it for us (because IE).\n    var url = urllite(el.href);\n    var windowURL = urllite(window.location.href);\n\n    // Ignore links that don't share a protocol and host with ours.\n    if (url.protocol !== windowURL.protocol || url.host !== windowURL.host) {\n      return;\n    }\n\n    // Ignore 'rel=\"external\"' links.\n    if (el.rel && /(?:^|\\s+)external(?:\\s+|$)/.test(el.rel)) {\n      return;\n    }\n\n    // Prevent :focus from sticking; preventDefault() stops blur in some browsers\n    el.blur();\n    e.preventDefault();\n\n    // Mark if any of our routers matched. If they didn't, we'll call gotoURL.\n    var matched = false;\n\n    var onBeforeNavigation = function(path, navigation, match) {\n      if (match && match.match) {\n        matched = true;\n      }\n    }\n\n    var gotoURL = this.props.gotoURL;\n    this.props.environment.navigate(\n      url.pathname + (url.hash.length > 1 ? url.hash : ''),\n      {onBeforeNavigation: onBeforeNavigation},\n      function(err, info) {\n        if (err) {\n          throw err;\n        }\n        // No routers matched - so we'll escape out using gotoURL.\n        if (!matched) gotoURL(el.href);\n      });\n  },\n\n  render: function() {\n    var props = assign({}, this.props, {\n      onClick: this.onClick\n    });\n    props = omit(props, PROP_KEYS);\n    return React.createElement(this.props.component, props, this.props.children);\n  }\n\n});\n\nmodule.exports = CaptureClicks;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/environment/HashEnvironment.js":"\"use strict\";\n\nvar Environment = require('./Environment');\n\n/**\n * Routing environment which routes by `location.hash`.\n */\nfunction HashEnvironment() {\n  this.onHashChange = this.onHashChange.bind(this);\n  Environment.call(this);\n}\n\nHashEnvironment.prototype = Object.create(Environment.prototype);\nHashEnvironment.prototype.constructor = HashEnvironment;\n\nHashEnvironment.prototype.getPath = function() {\n  return window.location.hash.slice(1) || '/';\n};\n\nHashEnvironment.prototype.pushState = function(path, navigation) {\n  window.location.hash = path;\n};\n\nHashEnvironment.prototype.replaceState = function(path, navigation) {\n  var href = window.location.href.replace(/(javascript:|#).*$/, '');\n  window.location.replace(href + '#' + path);\n};\n\nHashEnvironment.prototype.start = function() {\n  if (window.addEventListener) {\n    window.addEventListener('hashchange', this.onHashChange);\n  } else {\n    window.attachEvent('onhashchange', this.onHashChange);\n  }\n};\n\nHashEnvironment.prototype.stop = function() {\n  if (window.removeEventListener) {\n    window.removeEventListener('hashchange', this.onHashChange);\n  } else {\n    window.detachEvent('onhashchange', this.onHashChange);\n  }\n};\n\nHashEnvironment.prototype.onHashChange = function() {\n  var path = this.getPath();\n\n  if (this.path !== path) {\n    this.setPath(path, {isPopState: true});\n  }\n};\n\nmodule.exports = HashEnvironment;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/environment/LocalStorageKeyEnvironment.js":"'use strict';\n\nvar Environment = require('./Environment');\n\n/**\n* Routing environment which stores routing state in localStorage.\n*/\nfunction LocalStorageKeyEnvironment(key) {\n  this.key = key;\n  var store = this.onStorage = this.onStorage.bind(this);\n  var storage;\n\n  try {\n    storage = window.localStorage;\n    storage.setItem(key, storage.getItem(key));\n  } catch (e) {\n    storage = null;\n  }\n\n  this.storage = storage || {\n    data: {},\n    getItem: function(itemKey) {return this.data[itemKey]; },\n    setItem: function(itemKey, val) {\n      this.data[itemKey] = val;\n      clearTimeout(this.storeEvent);\n      this.storeEvent = setTimeout(store, 1);\n    }\n  };\n\n  Environment.call(this);\n}\n\nLocalStorageKeyEnvironment.prototype = Object.create(Environment.prototype);\nLocalStorageKeyEnvironment.prototype.constructor = LocalStorageKeyEnvironment;\n\nLocalStorageKeyEnvironment.prototype.getPath = function() {\n  return this.storage.getItem(this.key) || '';\n};\n\nLocalStorageKeyEnvironment.prototype.pushState = function(path, navigation) {\n  this.storage.setItem(this.key, path);\n};\n\nLocalStorageKeyEnvironment.prototype.replaceState = function(path, navigation) {\n  this.storage.setItem(this.key, path);\n};\n\nLocalStorageKeyEnvironment.prototype.start = function() {\n  if (typeof window !== 'undefined' && window.addEventListener) {\n    window.addEventListener('storage', this.onStorage, false);\n  }\n};\n\nLocalStorageKeyEnvironment.prototype.stop = function() {\n  if (typeof window !== 'undefined' && window.removeEventListener) {\n    window.removeEventListener('storage', this.onStorage, false);\n  }\n};\n\nLocalStorageKeyEnvironment.prototype.onStorage = function() {\n  var path = this.getPath();\n  if (this.path !== path) {\n    this.setPath(path, {});\n  }\n};\n\nvar _environments = {};\n\nfunction getEnvironment(key) {\n  if (_environments[key] === undefined) {\n    _environments[key] = new LocalStorageKeyEnvironment(key);\n  }\n  return _environments[key];\n}\n\nmodule.exports = LocalStorageKeyEnvironment;\nmodule.exports.getEnvironment = getEnvironment;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/environment/PathnameEnvironment.js":"\"use strict\";\n\nvar Environment = require('./Environment');\n\n/**\n * Routing environment which routes by `location.pathname`.\n */\nfunction PathnameEnvironment() {\n  this.onPopState = this.onPopState.bind(this);\n  this.useHistoryApi = !!(window.history &&\n                          window.history.pushState &&\n                          window.history.replaceState);\n  Environment.call(this);\n}\n\nPathnameEnvironment.prototype = Object.create(Environment.prototype);\nPathnameEnvironment.prototype.constructor = PathnameEnvironment;\n\nPathnameEnvironment.prototype.getPath = function() {\n  return window.location.pathname + window.location.search;\n};\n\nPathnameEnvironment.prototype.pushState = function(path, navigation) {\n  if (this.useHistoryApi) {\n    window.history.pushState({}, '', path);\n  } else {\n    window.location.pathname = path;\n  }\n};\n\nPathnameEnvironment.prototype.replaceState = function(path, navigation) {\n  if (this.useHistoryApi) {\n    window.history.replaceState({}, '', path);\n  } else {\n    window.location.pathname = path;\n  }\n};\n\nPathnameEnvironment.prototype.start = function() {\n  if (this.useHistoryApi && window.addEventListener) {\n    window.addEventListener('popstate', this.onPopState);\n  }\n};\n\nPathnameEnvironment.prototype.stop = function() {\n  if (this.useHistoryApi && window.removeEventListener) {\n    window.removeEventListener('popstate', this.onPopState);\n  }\n};\n\nPathnameEnvironment.prototype.onPopState = function(e) {\n  var path = window.location.pathname;\n\n  if (this.path !== path) {\n    this.setPath(path, {isPopState: true});\n  }\n};\n\nmodule.exports = PathnameEnvironment;\n","/home/travis/build/npmtest/node-npmtest-react-router-component/node_modules/react-router-component/lib/environment/QuerystringKeyEnvironment.js":"\"use strict\";\n\nvar qs                  = require('qs');\nvar PathnameEnvironment = require('./PathnameEnvironment');\n\n/**\n * Environment which keeps routing state in a specified key in a querystring.\n */\nfunction QuerystringKeyEnvironment(key) {\n  this.key = key;\n  PathnameEnvironment.call(this);\n}\n\nQuerystringKeyEnvironment.prototype = Object.create(PathnameEnvironment.prototype);\nQuerystringKeyEnvironment.prototype.constructor = QuerystringKeyEnvironment;\n\nQuerystringKeyEnvironment.prototype.getPath = function() {\n  var query = qs.parse(window.location.search.slice(1));\n  return query[this.key] ? '/' + query[this.key] : '/';\n};\n\nQuerystringKeyEnvironment.prototype.pushState = function(path, navigation) {\n  path = this.updatedPath(path);\n  PathnameEnvironment.prototype.pushState.call(this, path, navigation);\n};\n\nQuerystringKeyEnvironment.prototype.replaceState = function(path, navigation) {\n  path = this.updatedPath(path);\n  PathnameEnvironment.prototype.replaceState.call(this, path, navigation);\n};\n\nQuerystringKeyEnvironment.prototype.updatedPath = function(value) {\n  var path = PathnameEnvironment.prototype.getPath.call(this);\n  var query;\n  if (path.indexOf('?') === -1) {\n    query = {};\n    query[this.key] = value.slice(1);\n    return '/?' + qs.stringify(query);\n  } else {\n    var splitted = path.split('?');\n    query = qs.parse(splitted[1] || '');\n    query[this.key] = value.slice(1);\n    return splitted[0] + '?' + qs.stringify(query);\n  }\n};\nvar _environments = {};\n\nfunction getEnvironment(key) {\n  if (_environments[key] === undefined) {\n    _environments[key] = new QuerystringKeyEnvironment(key);\n  }\n  return _environments[key];\n}\n\nmodule.exports = QuerystringKeyEnvironment;\nmodule.exports.getEnvironment = getEnvironment;\n"}